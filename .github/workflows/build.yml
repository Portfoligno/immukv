name: Build

on:
  push:
    branches: ['**']
    tags:
      - '[0-9]*.[0-9]*.[0-9]*'

jobs:
  python:
    runs-on: ubuntu-latest
    container:
      image: python@sha256:411fa4dcfdce7e7a3057c45662beba9dcd4fa36b2e50a2bfcd6c9333e59bf0db
      # python:3.12-slim-bullseye
    steps:
      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y ca-certificates git

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python dependencies
        working-directory: python
        run: |
          pip install --no-cache-dir -e ".[dev]"

      - name: Type check with mypy
        working-directory: python
        run: |
          mypy src/immukv

      - name: Lint with ruff
        working-directory: python
        run: |
          ruff check src/immukv

      - name: Format check with black
        working-directory: python
        run: |
          black --check src/immukv

      - name: Run tests
        working-directory: python
        run: |
          pytest tests/ -v
        if: false  # Skip until tests are implemented

      - name: Verify version matches tag
        if: startsWith(github.ref, 'refs/tags/')
        working-directory: python
        run: |
          pip install --no-cache-dir tomli
          PACKAGE_VERSION=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Version mismatch: package=$PACKAGE_VERSION tag=$TAG_VERSION"
            exit 1
          fi

      - name: Build distribution packages
        if: startsWith(github.ref, 'refs/tags/')
        working-directory: python
        run: |
          pip install --no-cache-dir build
          python -m build

      - name: Upload distribution artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: python/dist/

  typescript:
    runs-on: ubuntu-latest
    container:
      image: node@sha256:d69fb189fa7765636655db043a6a9e6be5ddf94bd1a8dc33fd0bcf4664606a9e
      # node:18-bullseye-slim
    steps:
      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y ca-certificates git

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        working-directory: typescript
        run: |
          npm ci --omit optional

      - name: Build
        working-directory: typescript
        run: |
          npm run build

      - name: Lint
        working-directory: typescript
        run: |
          npm run lint

      - name: Format check
        working-directory: typescript
        run: |
          npx prettier --check "src/**/*.ts"

      - name: Run tests
        working-directory: typescript
        run: |
          npm test
        if: false  # Skip until tests are implemented

      - name: Verify version matches tag
        if: startsWith(github.ref, 'refs/tags/')
        working-directory: typescript
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Version mismatch: package=$PACKAGE_VERSION tag=$TAG_VERSION"
            exit 1
          fi

      - name: Upload distribution artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: typescript-dist
          path: |
            typescript/dist/
            typescript/package.json
            typescript/README.md

  publish-python:
    if: startsWith(github.ref, 'refs/tags/')
    needs: python
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download distribution artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-typescript:
    if: startsWith(github.ref, 'refs/tags/')
    needs: typescript
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download distribution artifacts
        uses: actions/download-artifact@v4
        with:
          name: typescript-dist
          path: .

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish to npm with OIDC
        run: |
          npm publish --access public
